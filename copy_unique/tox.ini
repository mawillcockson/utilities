# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
minversion = 3.20.0
isolated_build = True
envlist = test-{py37,py38,py39},dev,truenas

# From:
# https://tox.readthedocs.io/en/latest/example/package.html#poetry
[tox:.package]
# note tox will use the same python version as under what tox is installed to package
# so unless this is python 3 you can require a given python version for the packaging
# environment via the basepython key
basepython = python

[testenv]
description = just type checking and linting
# Causes virtualenv to upgrade pip, setuptools, and wheel
# https://tox.readthedocs.io/en/latest/config.html#conf-download
download = True
# Specifies a regex to match against sys.platform
# https://tox.readthedocs.io/en/latest/config.html#conf-platform
platform = linux|win32
# Allow the use of poetry
# From:
# https://python-poetry.org/docs/faq/#is-tox-supported
allowlist_externals = poetry
commands =
    poetry install -v
    poetry run mypy
    poetry run black --check copy_unique tests
    poetry run isort --check copy_unique tests
    poetry run pylint copy_unique tests

[testenv:test]
description = tests, type checking, and linting
commands =
    {[testenv]commands}
    poetry run pytest

[testenv:dev]
description = use my development machine's version of python
basepython = {env:PYENV_ROOT}/versions/3.7.3/bin/python
commands =
    python -c "from sys import version_info as vi;assert (vi.major, vi.minor, vi.micro) == (3,7,3)"
    {[testenv:test]commands}

[testenv:truenas]
description = use the version of Python used by my TrueNAS
basepython = {env:PYENV_ROOT}/versions/3.8.5/bin/python
commands =
    python -c "from sys import version_info as vi;assert (vi.major, vi.minor, vi.micro) == (3,8,5)"
    {[testenv:test]commands}
